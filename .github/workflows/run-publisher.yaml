name: Run - Publisher

on:
  # Triggers the workflow on pull request events but only for the main branch
  pull_request:
    branches: [main]
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      COMMIT_ID_CHOICE:
        description: 'Choose "publish-all-artifacts-in-repo" only when you want to force republishing all artifacts (e.g. after build failure). Otherwise stick with the default behavior of "publish-artifacts-in-last-commit"'
        required: true
        type: choice
        default: "publish-artifacts-in-last-commit"
        options:
          - "publish-artifacts-in-last-commit"
          - "publish-all-artifacts-in-repo"

jobs:
  get-commit:
    runs-on: ubuntu-latest
    steps:
      # Set the COMMIT_ID env variable
      - name: Set the Commit Id
        id: commit
        run: |
          echo "::set-output name=commit_id::${{ github.sha }}"
    outputs:
      commit_id: ${{ steps.commit.outputs.commit_id }}
  #Publish with Commit ID
  Push-Changes-To-APIM-Dev-With-Commit-ID:
    if: (github.event.inputs.COMMIT_ID_CHOICE == 'publish-artifacts-in-last-commit' || github.event.inputs.COMMIT_ID_CHOICE == '')
    needs: get-commit
    uses: ./.github/workflows/run-publisher-with-env.yaml
    with:
      API_MANAGEMENT_ENVIRONMENT: dev # change this to match the dev environment created in settings
      COMMIT_ID: ${{ needs.get-commit.outputs.commit_id }}
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts # change this to the artifacts folder
    secrets: inherit

  #Publish without Commit ID. Publishes all artifacts that reside in the artifacts forlder
  Push-Changes-To-APIM-Dev-Without-Commit-ID:
    if: ( github.event.inputs.COMMIT_ID_CHOICE == 'publish-all-artifacts-in-repo' )
    needs: get-commit
    uses: ./.github/workflows/run-publisher-with-env.yaml
    with:
      API_MANAGEMENT_ENVIRONMENT: dev # change this to match the dev environment created in settings
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts # change this to the artifacts folder
    secrets: inherit

  test-apis:
    runs-on: ubuntu-latest
    needs: Push-Changes-To-APIM-Dev-With-Commit-ID 
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      # Install postman's newman command line utility and also the htmlextra reporter
      - name: Install newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      # Create directory to hold the test results
      - name: Create test results directory
        run: |
          mkdir -p test-results

      # Run the POSTMAN collection tests
      - name: Run Postman tests
        run: > 
          newman run ./postman-collections/api-test-1.json 
          --env-var "aad-tenant-id=${{ vars.CLIENT_ID }}" 
          --env-var "aad-tenant-id=${{ secrets.AZURE_TENANT_ID }}" 
          --env-var "aad-frontend-client-id=${{ secrets.API_TESTING_FRONTEND_CLIENT_ID }}" 
          --env-var "aad-backend-client-id=${{ secrets.API_TESTING_BACKEND_CLIENT_ID }}" 
          --env-var "aad-frontend-client-secret=${{ secrets.API_TESTING_FRONTEND_CLIENT_SECRET }}" 
          --env-var "scus-subscription-key=${{ secrets.APIM_TESTING_SUBSCRIPTION_KEY }}"  
          --bail