<!--
    - Policies are applied in the order they appear.
    - Position <base/> inside a section to inherit policies from the outer scope.
    - Comments within policies are not preserved.
-->
<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
<policies>
	<!-- Throttle, authorize, validate, cache, or transform the requests -->
	<inbound>
		<base />
		<authentication-managed-identity resource="https://atlas.microsoft.com/" output-token-variable-name="managed-id-access-token" ignore-error="false" />
		<set-header name="Authorization" exists-action="override">
			<value>@("Bearer " + (string)context.Variables["managed-id-access-token"])</value>
		</set-header>
		<set-header name="x-ms-client-id" exists-action="override">
			<value>{{azure-maps-client-id}}</value>
		</set-header>
		<set-query-parameter name="api-version" exists-action="override">
			<value>2025-01-01</value>
		</set-query-parameter>
	</inbound>
	<!-- Control if and how the requests are forwarded to services  -->
	<backend>
		<base />
	</backend>
	<!-- Customize the responses -->
	<outbound>
		<base />
		<choose>
			<when condition="@(context.Response.StatusCode >= 200 && context.Response.StatusCode < 300)">
				<log-to-eventhub logger-id="EventHubLogger1">@{
                    return new JObject(
                        new JProperty("eventTime", DateTime.UtcNow), 
                        new JProperty("requestId", context.RequestId),
                        new JProperty("api", context.Api.Name),                     
                        new JProperty("method", context.Request.Method),
                        new JProperty("path", context.Request.Url.Path ),
                        new JProperty("statusCode",context.Response.StatusCode)
                    ).ToString();
                }</log-to-eventhub>
			</when>
		</choose>
	</outbound>
	<!-- Handle exceptions and customize error responses  -->
	<on-error>
		<base />
	</on-error>
</policies>